function findRest(e,t,n,r,c){let i="";for(;t[e]!==c;)i+=t[e],++e;r.content.push(i);let l=r.content.indexOf(i);for(;r.rVarIdx.includes(l);)l=r.content.indexOf(i,l+1);return r.rVarIdx.push(l),reactiveVar[i]={...reactiveVar[i]},Object.hasOwn(reactiveVar[i],n)||(reactiveVar[i][n]={element:r.element,idx:[]}),reactiveVar[i][n].idx.push(l),e+=1}function lexer(e,t,n){let r=0,c=0;for(;c<e.length;c++)"$"===e[c]&&"{"===e[c+1]&&(n.content.push(e.substring(r,c)),c+=2,c=findRest(c,e,t,n,"}"),r=c);n.content.push(e.substring(r,e.length))}function execute(e){return Function("return "+e)()}function show(e,t){let n="";const r=t.content;for(let e=0;e<r.length;e++)if(t.rVarIdx.includes(e)){const c=execute(r[e]);t.newValue[t.rVarIdx.indexOf(e)]=c,n+=c}else n+=r[e];e.innerText=n}let reactiveElement={},reactiveVar={};const rElem=document.querySelectorAll("[reactive]");function updateAll(){for(const e in reactiveElement)show(reactiveElement[e].element,reactiveElement[e])}function updateWhere(e){Object.keys(reactiveVar[e]).forEach((t=>{let n="";const r=reactiveVar[e][t],c=reactiveElement[t].content;for(let i=0;i<c.length;i++)r.idx.includes(i)?n+=execute(e):r.idx.includes(i)||!reactiveElement[t].rVarIdx.includes(i)?n+=c[i]:n+=reactiveElement[t].newValue[reactiveElement[t].rVarIdx.indexOf(i)];reactiveElement[t].element.innerText=n}))}rElem.forEach(((e,t)=>{const n="rID-"+e.tagName.toLowerCase()+`-${t+1}`;e.setAttribute("reactive",n),reactiveElement[n]={element:e,content:[],rVarIdx:[],newValue:[]},lexer(e.textContent,n,reactiveElement[n]),show(e,reactiveElement[n])}));